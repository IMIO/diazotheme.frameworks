<?xml version="1.0" encoding="UTF-8"?>
<rules xmlns="http://namespaces.plone.org/diazo"
         xmlns:css="http://namespaces.plone.org/diazo/css"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:xi="http://www.w3.org/2001/XInclude">

 <rules if-content="//body[contains(@class, 'section-')] and not(//*[@id='breadcrumbs-1'])">
      <replace css:content="#portal-columns" method="raw">
          <section id="portal-hero">
              <div class="container">
                  <div class="hero-unit clearfix">
                      <xsl:copy-of css:select=".documentFirstHeading"/>
                      <xsl:copy-of css:select=".documentDescription"/>
                  </div>
              </div>          
          </section>
          <section id="portal-columns">
              <div class="container">
                  <div class="row">
                      <xsl:apply-templates select="./*"/>
                  </div>
              </div>          
          </section>
      </replace>
      <drop css:content=".documentFirstHeading"/>
      <drop css:content=".documentDescription"/>
  </rules>

  <rules css:if-content="body:not([class*=section-]), body[class*=section-] #breadcrumbs-1">
      <replace css:content="#portal-columns">
          <section id="portal-columns">
              <div class="container">
                  <div class="row">
                      <xsl:apply-templates select="./*"/>
                  </div>
              </div>          
          </section>
      </replace>
      <replace css:content=".documentFirstHeading">
          <div class="page-header">
              <h1>
                  <xsl:apply-templates select="./text()|./*"/>
              </h1>
          </div>
      </replace>
      <replace css:content=".documentDescription">
          <p class="lead">
              <xsl:apply-templates select="./text()"/>
          </p>
      </replace>
  </rules>
         
  <!-- Breadcrumbs -->
  <drop css:content="#portal-breadcrumbs"/>
  <after css:theme-children=".main" method="raw">
    <ul class="breadcrumb">
        <xsl:for-each css:select="#portal-breadcrumbs > span:not(:last-child) a">
            <li>
                <xsl:apply-templates css:select="a"/>
                <span class="divider">/</span>
            </li>
        </xsl:for-each>
        <li class="active">
            <xsl:apply-templates css:select="#portal-breadcrumbs > span:last-child > *"/>
        </li>
    </ul>
  </after> 

  <!-- Tiles -->
  <replace css:content=".tileItem">
      <div class="media">
          <a class="pull-left">
              <xsl:apply-templates select="./h2/a/@href"/>
              <img> 
                  <xsl:attribute name="class">media-object</xsl:attribute>
                  <xsl:copy-of select="./a/div/img/@*" />
              </img>
          </a>
          <div class="media-body">
              <h4 class="media-heading">
                  <xsl:apply-templates select="./h2/*"/>
              </h4>
              <p><xsl:apply-templates select="./p[contains(concat(' ', normalize-space(@class), ' '), ' tileBody ')]/*"/></p>
          </div>
      </div>
  </replace>

</rules>
