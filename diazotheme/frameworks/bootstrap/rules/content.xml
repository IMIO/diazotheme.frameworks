<?xml version="1.0" encoding="UTF-8"?>
<rules xmlns="http://namespaces.plone.org/diazo"
         xmlns:css="http://namespaces.plone.org/diazo/css"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:xi="http://www.w3.org/2001/XInclude">
         
  <!-- Breadcrumbs -->
  <drop css:content="#portal-breadcrumbs"/>
  <replace css:content="#portal-breadcrumbs" method="raw" if-content="//*[@id='breadcrumbs-1']">
    <ul class="breadcrumb">
        <xsl:for-each select="./span[not(position() = last())]//a">
            <li>
                <xsl:apply-templates select="."/>
                <span class="divider">/</span>
            </li>
        </xsl:for-each>
        <li class="active">
            <xsl:apply-templates select="./span[position() = last()]/*"/>
        </li>
    </ul>
  </replace> 

  <!-- Visual editor styles -->
  <replace content="//img[contains(concat(' ', normalize-space(@class), ' '), ' image-left ')]/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> well pull-left</xsl:attribute>
  </replace>
  <replace content="//img[contains(concat(' ', normalize-space(@class), ' '), ' image-right ')]/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> well pull-right</xsl:attribute>
  </replace>
  <replace content="//p[contains(concat(' ', normalize-space(@class), ' '), ' callout ')]">
    <blockquote>
      <xsl:copy-of select="."/>
    </blockquote>
  </replace>
  <replace css:content="blockquote.pullquote">
    <xsl:copy>
      <xsl:attribute name="class"><xsl:value-of select="./@class" /> pull-right</xsl:attribute>
      <xsl:apply-templates select="./text()|./*"/>
    </xsl:copy>
  </replace>
  <replace content="//*[contains(concat(' ', normalize-space(@class), ' '), ' discreet ')]/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> muted</xsl:attribute>
  </replace>
  <replace content="//*[contains(concat(' ', normalize-space(@class), ' '), ' visualHighlight ')]/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> text-info</xsl:attribute>
  </replace>
  <replace content="//table[@class='plain']/@class">
    <xsl:attribute name="class">table table-bordered</xsl:attribute>
  </replace>
  <replace content="//table[@class='invisible']/@class">
    <xsl:attribute name="class">table</xsl:attribute>
  </replace>

  <!-- Tiles -->
  <replace css:content=".tileItem">
      <div class="media">
          <a class="pull-left">
              <xsl:apply-templates select="./h2/a/@href"/>
              <img> 
                  <xsl:attribute name="class">media-object</xsl:attribute>
                  <xsl:copy-of select="./a/div/img/@*" />
              </img>
          </a>
          <div class="media-body">
              <h4 class="media-heading">
                  <xsl:apply-templates select="./h2/*"/>
              </h4>
              <p><xsl:apply-templates select="./p[contains(concat(' ', normalize-space(@class), ' '), ' tileBody ')]/*"/></p>
          </div>
      </div>
  </replace>

  <!-- Thumbnail/album folder view -->
  <replace css:content="#content-core" css:if-content="body.template-atct_album_view">
    <style>
      .photoAlbumEntryWrapper { display:block; min-height:128px; }
    </style>
    <div>
      <xsl:copy-of select="@*" />
      <ul class="thumbnails">
        <xsl:for-each css:select=".photoAlbumEntry">
          <li class="span3">
            <a>
              <xsl:copy-of select="./a/@*" />
              <xsl:attribute name="class"><xsl:value-of select="." /> thumbnail</xsl:attribute>
              <xsl:apply-templates select="./a/*" />
            </a>
          </li>
        </xsl:for-each>
      </ul>
      <xsl:apply-templates select="./*[not(@class='photoAlbumEntry')]"/>
    </div>
  </replace>

  <!-- Categories/tags -->
  <replace content="//*[@id='category']/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> pull-right</xsl:attribute>
  </replace>
  <replace content="//*[@class='link-category']/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> label</xsl:attribute>
  </replace>

  <!-- Discussions -->
  <replace content="//div[contains(concat(' ', normalize-space(@class), ' '), ' discussion ')]/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> well</xsl:attribute>
  </replace>
  <replace css:content="#commenting > fieldset > legend">
    <h3>
      <xsl:copy-of select="@*" />
      <xsl:apply-templates select="./text()|./*" />
    </h3>
  </replace>
  <replace content="//div[@class='commentImage']//img">
    <xsl:copy>
      <xsl:attribute name="width">32</xsl:attribute>
      <xsl:copy-of select="@*[not(local-name() = 'height')]" />
      <xsl:apply-templates />
    </xsl:copy>
  </replace>

  <!-- News views -->
  <replace content="//*[contains(concat(' ', normalize-space(@class), ' '), ' newsImageContainer ')]/@class">
    <xsl:attribute name="class"><xsl:value-of select="." /> pull-right well</xsl:attribute>
  </replace>

</rules>
